{"version":3,"sources":["reportWebVitals.js","Card.js","CardList.js","SearchBox.js","Scroll.js","ErrorBoundary.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","alt","src","CardList","robots","cardComponent","map","user","i","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","response","json","users","filteredRobots","filter","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"kKAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCSCQ,EAdF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAKC,EAAc,EAAdA,MAAMC,EAAQ,EAARA,GACtB,OAGI,cAFA,CAEA,OAAKC,UAAY,sDAAjB,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA2BH,EAA3B,cACrB,gCACI,6BAAKF,IACL,4BAAIC,WCgBLK,EAvBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAETC,EAAgBD,EAAOE,KAAI,SAACC,EAAOC,GACrC,OACA,cAAC,EAAD,CACCT,GAAIK,EAAOI,GAAGT,GACdF,KAAMO,EAAOI,GAAGX,KAChBC,MAAOM,EAAOI,GAAGV,OAHLU,MAQjB,OACI,8BACKH,KCDEI,EAdG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAE7B,OACI,qBAAKX,UAAY,MAAjB,SACI,uBACAA,UAAY,mCACZY,KAAK,SACLC,YAAY,eACZC,SAAYH,OCATI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAS,CAACC,SAAU,SAAWC,OAAQ,kBAAoBC,OAAQ,SAAxE,SACKJ,EAAMK,YCkBJC,E,kDAnBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAW,M,oBAG9B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,mEAEJG,KAAKX,MAAMK,a,GAjBEQ,aC6DbC,E,kDAvDX,aAAe,IAAD,8BACV,gBAeJC,eAAiB,SAACC,GAGd,EAAKJ,SAAS,CAAClB,YAAYsB,EAAMC,OAAOC,SAjBxC,EAAKX,MAAQ,CACTnB,OAAQ,GACRM,YAAY,IAJN,E,qDAUd,WAAqB,IAAD,OAChByB,MAAM,8CACD7C,MAAK,SAAA8C,GAAQ,OAAGA,EAASC,UACzB/C,MAAK,SAAAgD,GAAK,OAAG,EAAKV,SAAS,CAAExB,OAAOkC,S,oBAU7C,WAAU,IAAD,OAECC,EAAiBZ,KAAKJ,MAAMnB,OAAOoC,QAAO,SAAApC,GAC5C,OAAOA,EAAOP,KAAK4C,cAAcC,SAAS,EAAKnB,MAAMb,YAAY+B,kBAGrE,OAAgC,IAA7Bd,KAAKJ,MAAMnB,OAAOuC,OACV,4CAIH,sBAAK3C,UAAY,KAAjB,UACI,kDACA,cAAC,EAAD,CAAWW,aAAgBgB,KAAKI,iBAEhC,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU3B,OAAUmC,e,GA1C9BV,aCClBe,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1B5D,M","file":"static/js/main.c5d486ea.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst Card = ({name,email,id}) => {\r\n    return (\r\n        //below code is jsx so importing react is important beacause of that jsx is working\r\n\r\n        <div className = 'tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robots' src ={`https://robohash.org/${id}?100*100`}/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n  \r\n    const cardComponent = robots.map((user , i) => {\r\n        return (\r\n        <Card key = {i}\r\n         id={robots[i].id} \r\n         name={robots[i].name} \r\n         email={robots[i].email} \r\n         />\r\n        );\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            {cardComponent}\r\n\r\n            {/* <Card id={robots[1].id} name={robots[1].name} email={robots[1].email}/>\r\n            <Card id={robots[2].id} name={robots[2].name} email={robots[2].email}/> */}\r\n        \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchField, searchChange}) => {\r\n\r\n    return (\r\n        <div className = 'pa2'>\r\n            <input\r\n            className = 'pa3 ba b--green bg-lightest-blue' \r\n            type='search' \r\n            placeholder='search robos'\r\n            onChange = {searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style = {{overflow: 'scroll' , border: '1px solid black' , height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError : true})\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError){\r\n            return <h1>Oooops..... something is wrong!!!</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n\r\n","import React, {Component} from 'react';\r\nimport CardList from '../CardList';\r\nimport SearchBox from '../SearchBox';\r\nimport Scroll from '../Scroll';\r\nimport ErrorBoundary from '../ErrorBoundary';\r\n\r\nclass App extends Component{\r\n    \r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchField:''\r\n        }\r\n    }\r\n\r\n    //fetching through api and this ethod runs after the render method, you can know about\r\n    //the lifecycle of the components by searchin it that which method runs first \r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response=> response.json())\r\n            .then(users=> this.setState({ robots:users }));\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        // console.log(event.target.value);\r\n        \r\n        this.setState({searchField:event.target.value})\r\n    \r\n    }\r\n\r\n    render() {\r\n\r\n        const filteredRobots = this.state.robots.filter(robots =>{\r\n            return robots.name.toLowerCase().includes(this.state.searchField.toLowerCase())\r\n        })\r\n\r\n        if(this.state.robots.length === 0) {\r\n            return <h1>Loading...</h1>\r\n        }\r\n        else {\r\n            return (\r\n                <div className = 'tc'>\r\n                    <h1>Robo Dobo Jobo's</h1>\r\n                    <SearchBox searchChange = {this.onSearchChange}/>\r\n                    \r\n                    <Scroll>\r\n                        <ErrorBoundary>\r\n                            <CardList robots = {filteredRobots}/>\r\n                        </ErrorBoundary>\r\n                        \r\n                    </Scroll>\r\n                   \r\n        \r\n                </div>\r\n                \r\n            );\r\n        }\r\n\r\n        \r\n    }\r\n       \r\n}\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './containers/App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}